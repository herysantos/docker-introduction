#docker-introduction: Comandos utilizados

##Criando imagem e container Docker Mysql;

[docker-introduction]: sudo snap install docker
[docker-introduction]: sudo docker build -t mysql-image -f api/db/dockerfile .
[docker-introduction]: sudo docker image ls
[docker-introduction]: sudo docker run -d --rm --name mysql-container mysql-image

OU 

docker run -d -v $(pwd)/tmp/db/data:/var/lib/mysql --rm --name mysql-container mysql-image --default-authentication-plugin=mysql_native_password

[docker-introduction]: sudo docker ps

##Executando comandos dentro de um Container
[docker-introduction]: sudo docker exec -i mysql-container mysql -uroot -p'myrootpass' < api/db/script.sql
[docker-introduction]: sudo docker exec -it mysql-container /bin/bash
[root@mysql-container]: exit
[docker-introduction]: sudo docker stop mysql-container

##Vinculando a pasta de configurações de um container para manter alterações após para-lo:

[docker-introduction]: sudo docker run -d -v $(pwd)/tmp/db/data:/var/lib/mysql --rm --name mysql-container mysql-image
[docker-introduction]: sudo docker exec -i mysql-container mysql -uroot -p'myrootpass' < api/db/script.sql

# Preparando ambiente para api Node JS
[docker-introduction/api]: sudo npm init
[docker-introduction/api]: sudo npm install --save-dev nodemo
[docker-introduction/api]: sudo npm install --save express mysql

## Criando imagem e container NodeJS
[docker-introduction]: sudo docker build -t node-image -f api/dockerfile .
[docker-introduction]: sudo docker run -d -v $(pwd)/api:/home/node/app -p 9001:9001 --rm --name node-container
OU
sudo docker run -d -v $(pwd)/api:/home/node/app -p 9001:9001 --link mysql-container --rm --name node-container node-image


## Criando imagem e container PHP7.2 e Apache
[docker-introduction]: sudo docker build -t php-image -f website/dockerfile .
[docker-introduction]: sudo docker run -d -v $(pwd)/website:/var/www/html -p 8888:80 --link node-container --rm --name php-container php-image

## Debugando container node caso não abra
[docker-introduction]: sudo docker logs -f node-container

/****
Docker Build Options

-t or --tag = define a tag name for the image
-f or --file = set a PATH to the dockfile
-v or --volume = Bind mount a volume to keep data after stop container
DOC: https://docs.docker.com/engine/reference/commandline/build/

Docker Run Options

-d or --detach = Run container in background
--rm = remove a container if its already exists.
--name = assign a name to the container 
DOC: https://docs.docker.com/engine/reference/commandline/run/

Docker Exec Options

-i or --interactive = allow run a command in interactive mode // keep alive until commands done
-t --tty =  open a pseudo terminal
DOC: https://docs.docker.com/engine/reference/commandline/exec/
****/
